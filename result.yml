openapi: 3.0.0
info:
  title: RB Abroad Shikshya Pvt Ltd API Swagger
  description: RB Abroad Shikshya Pvt Ltd API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Mero Vision
    url: https://merovision.com
    email: merovision720@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://api.rbabroads.com/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Authentication
  - name: Super Admin
  - name: Super Admin > User Data
  - name: Super Admin > Site Setting
  - name: Super Admin > Master Data
  - name: Super Admin > Country Master Data
  - name: Super Admin > Country Master Data > Nepal
  - name: Super Admin > Company
  - name: Super Admin > University Application Period
  - name: Super Admin > Universities
  - name: Super Admin > CMS
  - name: Super Admin > CMS > Contact Us
  - name: Super Admin > CMS > Blog
  - name: Super Admin > CMS > Website Banner Statistics
  - name: Super Admin > CMS > About CEO
  - name: Super Admin > CMS > Our Team
  - name: Super Admin > CMS > FAQ
  - name: Super Admin > CMS > Testimonial
  - name: Super Admin > Agent
  - name: Super Admin > University Courses
  - name: Super Admin > University Features
  - name: Super Admin > Course Tags
  - name: Recruit Partners
  - name: Recruit Partners > Events
  - name: Recruit Partners > University
  - name: Recruit Partners > Courses
  - name: Website
  - name: Website > Contact Us
  - name: Website > Blog
  - name: Website > FAQ
  - name: Website > Our Team
  - name: Website > Site Settings
  - name: Website > Testimonial
paths:
  /api/super-admin-login:
    post:
      tags:
        - Authentication
      summary: super admin login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/set-password:
    get:
      tags:
        - Authentication
      summary: set password and verify account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/agent-login:
    post:
      tags:
        - Authentication
      summary: agent login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/user/{id}:
    get:
      tags:
        - Super Admin > User Data
      summary: show single user data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Super Admin > User Data
      summary: update user details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago5
                profile_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/change-password:
    post:
      tags:
        - Super Admin > User Data
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  example: fdgg
                password:
                  type: integer
                  example: '12345678'
                password_confirmation:
                  type: integer
                  example: '12345678'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/site-settings:
    post:
      tags:
        - Super Admin > CMS > About CEO
      summary: store ceo detail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ceo_name:
                  type: string
                  example: Rochak Bhattrai
                ceo_message:
                  type: string
                  example: hfghghh
                ceo_image:
                  type: string
                  format: binary
                settingable_type:
                  type: string
                  example: CEO
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > CMS > About CEO
      summary: show about consultancy CEO
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: settingable_type
          in: query
          schema:
            type: string
          example: CEO
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/master-data/genders:
    get:
      tags:
        - Super Admin > Master Data
      summary: gender master data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/master-data/country-list:
    get:
      tags:
        - Super Admin > Master Data
      summary: country list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/master-data/education-levels:
    get:
      tags:
        - Super Admin > Master Data
      summary: education levels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/master-data/countries/nepal:
    get:
      tags:
        - Super Admin > Country Master Data > Nepal
      summary: Nepal Province with district list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/master-data/countries/nepal/province/districts/{district_id}:
    get:
      tags:
        - Super Admin > Country Master Data > Nepal
      summary: municipality list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: district_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/company:
    get:
      tags:
        - Super Admin > Company
      summary: Company get api
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/company/{company_id}:
    get:
      tags:
        - Super Admin > Company
      summary: show single company details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/company/{id}:
    post:
      tags:
        - Super Admin > Company
      summary: update company
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  example: R.B. Abroad Shikshya Pvt. Ltd.
                email:
                  type: string
                phone_no:
                  type: string
                mobile_no:
                  type: string
                country:
                  type: string
                  example: Nepal
                province:
                  type: string
                district:
                  type: string
                municipality:
                  type: string
                street_address:
                  type: string
                  example: Bhadrapur Road, Birtamode
                vat_no:
                  type: integer
                  example: '654647567'
                registration_number:
                  type: integer
                  example: '54657657567'
                website:
                  type: string
                  example: rbabroads.com
                company_logo:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/application-periods:
    get:
      tags:
        - Super Admin > University Application Period
      summary: get the list of university application period
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/university:
    post:
      tags:
        - Super Admin > Universities
      summary: Create Universities
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                university_name:
                  type: string
                  example: Yorkville University - Toronto
                country:
                  type: string
                  example: Canada
                country_code:
                  type: string
                  example: CA
                province:
                  type: string
                  example: Ontario
                city:
                  type: string
                  example: Toronto
                university_logo:
                  type: string
                  format: binary
                designated_learning_institution_no:
                  type: string
                  example: 54rtrtt
                commission_amount:
                  type: integer
                  example: '500'
                founded_in:
                  type: string
                  example: '2014-01-23'
                institution_no_type:
                  type: string
                  example: dsfg
                institution_type:
                  type: string
                  example: Public
                video_link:
                  type: string
                  example: dfgfdg
                feature_name[]:
                  type: string
                  example: hh
                feature_description[]:
                  type: string
                  example: hh
                university_image[]:
                  type: string
                  format: binary
                application_fee:
                  type: integer
                  example: '800'
                description:
                  type: string
                  example: cbvvbnbn
                avg_graduation_program_duration:
                  type: string
                  example: 2 years
                avg_undergraduation_program_duration:
                  type: string
                  example: 4 years
                cost_of_living:
                  type: string
                  example: $20,635.00 CAD / Year
                gross_tuition:
                  type: string
                  example: $32,832.59 CAD / Year
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > Universities
      summary: Show all university list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/university/{slug}:
    get:
      tags:
        - Super Admin > Universities
      summary: show single university detail
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Super Admin > Universities
      summary: update university detail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                university_name:
                  type: string
                  example: Yorkville University - Toront0
                country:
                  type: string
                  example: Canada
                country_code:
                  type: string
                  example: CA
                province:
                  type: string
                  example: Ontario
                city:
                  type: string
                  example: Toronto
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super Admin > Universities
      summary: delete university
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/contact-us:
    get:
      tags:
        - Super Admin > CMS > Contact Us
      summary: show all contact us list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/contact-us/{contact_id}:
    delete:
      tags:
        - Super Admin > CMS > Contact Us
      summary: delete contact us data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: contact_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/blogs:
    post:
      tags:
        - Super Admin > CMS > Blog
      summary: create blog
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hy
                description:
                  type: string
                  example: dsfgsgd
                blog_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > CMS > Blog
      summary: show all blog list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: hy
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/blogs/{slug}:
    get:
      tags:
        - Super Admin > CMS > Blog
      summary: show single blog
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super Admin > CMS > Blog
      summary: delete blog
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Super Admin > CMS > Blog
      summary: update blog
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: dfsgd
                description:
                  type: string
                  example: gdgdg
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/blogs/update-status/{slug}:
    post:
      tags:
        - Super Admin > CMS > Blog
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: inactive
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/our-team:
    post:
      tags:
        - Super Admin > CMS > Our Team
      summary: store our team data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Drishya Poudel
                designation:
                  type: string
                  example: Frontend Developer
                our_team_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > CMS > Our Team
      summary: get all team
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/our-team/{id}:
    delete:
      tags:
        - Super Admin > CMS > Our Team
      summary: delete our team data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Super Admin > CMS > Our Team
      summary: update our team
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                designation:
                  type: string
                our_team_image:
                  type: string
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/faq:
    post:
      tags:
        - Super Admin > CMS > FAQ
      summary: store faq
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                question:
                  type: string
                answer:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > CMS > FAQ
      summary: get faq list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/cms/faq/{id}:
    post:
      tags:
        - Super Admin > CMS > FAQ
      summary: update faq
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                question:
                  type: string
                answer:
                  type: string
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super Admin > CMS > FAQ
      summary: delete faq
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/testimonial:
    post:
      tags:
        - Super Admin > CMS > Testimonial
      summary: store testimonial
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                country:
                  type: string
                  example: America
                visa_intake:
                  type: string
                  example: September
                university:
                  type: string
                  example: Oxford University
                subject:
                  type: string
                  example: Programming
                message:
                  type: string
                  example: dfdf
                university_logo:
                  type: string
                  format: binary
                profile_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > CMS > Testimonial
      summary: show all testimonial
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/testimonial/{id}:
    post:
      tags:
        - Super Admin > CMS > Testimonial
      summary: update testimonial
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago2
                country:
                  type: string
                  example: America
                visa_intake:
                  type: string
                  example: September
                university:
                  type: string
                  example: Oxford University
                subject:
                  type: string
                  example: Programming
                message:
                  type: string
                  example: dfdf
                university_logo:
                  type: string
                  format: binary
                profile_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > CMS > Testimonial
      summary: show single testimonial
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super Admin > CMS > Testimonial
      summary: delete testimonial
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/agent:
    post:
      tags:
        - Super Admin > Agent
      summary: create agent
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: thirstytorvalds@freethecookies.com
                nationality:
                  type: string
                  example: Nepalese
                mobile_no:
                  type: integer
                  example: '9825915122'
                phone_no:
                  type: string
                dob:
                  type: string
                  example: '2003-01-20'
                country:
                  type: string
                  example: Nepal
                postal:
                  type: integer
                  example: '44566'
                province:
                  type: string
                  example: Bagmati Province
                district:
                  type: string
                  example: Kathmandu
                address:
                  type: string
                  example: New Baneshwor
                company_name:
                  type: string
                  example: Mero Vision
                vat_no:
                  type: string
                  example: 3453535-45646-567
                company_registration_no:
                  type: string
                  example: 34545-456546
                website:
                  type: string
                  example: https://merovision.com/
                company_registration_image:
                  type: string
                  format: binary
                company_vat_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > Agent
      summary: show all agents
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/agent/{slug}:
    get:
      tags:
        - Super Admin > Agent
      summary: show single agent detail
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Super Admin > Agent
      summary: update agent details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciephago56@gmail.com
                nationality:
                  type: string
                  example: Nepalese
                mobile_no:
                  type: integer
                  example: '9825915122'
                phone_no:
                  type: string
                dob:
                  type: string
                  example: '2003-01-20'
                country:
                  type: string
                  example: Nepal
                postal:
                  type: integer
                  example: '44566'
                province:
                  type: string
                  example: Bagmati Province
                district:
                  type: string
                  example: Kathmandu
                address:
                  type: string
                  example: New Baneshwor
                company_name:
                  type: string
                  example: Mero Vision
                vat_no:
                  type: string
                  example: 3453535-45646-567
                company_registration_no:
                  type: string
                  example: 34545-456546
                website:
                  type: string
                  example: https://merovision.com/
                agent_profile_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/university-courses:
    post:
      tags:
        - Super Admin > University Courses
      summary: store university courses
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: dfsgfdg
                university_id:
                  type: integer
                  example: '3'
                program_level:
                  type: string
                  example: Undergruade Program
                description:
                  type: string
                  example: vcxbcbc
                currency:
                  type: string
                tuition_fee:
                  type: integer
                  example: '600'
                application_fee:
                  type: integer
                  example: '700'
                course_duration:
                  type: string
                course_image[]:
                  type: string
                  format: binary
                tag_name[]:
                  type: string
                  example: Fast Acceptance
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > University Courses
      summary: show all university courses
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/university-courses/{id}:
    get:
      tags:
        - Super Admin > University Courses
      summary: show single course
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/university-courses/4:
    delete:
      tags:
        - Super Admin > University Courses
      summary: delete university course
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/university-features:
    post:
      tags:
        - Super Admin > University Features
      summary: store features
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                university_id:
                  type: integer
                  example: '6'
                feature_name:
                  type: string
                  example: fgfg
                feature_description:
                  type: string
                  example: hghgh
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > University Features
      summary: show all university features
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/university-features/{id}:
    post:
      tags:
        - Super Admin > University Features
      summary: update university features
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                feature_name:
                  type: string
                  example: hy
                feature_description:
                  type: string
                  example: hy
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super Admin > University Features
      summary: delete university features
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/super-admin/course-tags:
    post:
      tags:
        - Super Admin > Course Tags
      summary: store course tags
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  example: '4'
                tag_name[]:
                  type: string
                  example: Fast Acceptance
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > Course Tags
      summary: show all course tags
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/agent/events:
    post:
      tags:
        - Recruit Partners > Events
      summary: store events
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hhh {required}
                description:
                  type: string
                  example: hhh {required}
                date:
                  type: string
                  example: 2023-08-20 {required}
                time:
                  type: string
                  example: 02:12 pm {required}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Recruit Partners > Events
      summary: show all events
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/agent/upcoming-events:
    get:
      tags:
        - Recruit Partners > Events
      summary: show all upcoming events
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/agent/past-events:
    get:
      tags:
        - Recruit Partners > Events
      summary: show all past events
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/agent/events/{id}:
    delete:
      tags:
        - Recruit Partners > Events
      summary: delete event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/agent/university:
    get:
      tags:
        - Recruit Partners > University
      summary: show all university
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/agent/university-courses:
    get:
      tags:
        - Recruit Partners > Courses
      summary: show all courses
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/contact-us:
    post:
      tags:
        - Website > Contact Us
      summary: store contact us
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciephago@gmail.com
                mobile_no:
                  type: integer
                  example: '9825915122'
                subject:
                  type: string
                  example: hy
                message:
                  type: string
                  example: hy
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/blogs:
    get:
      tags:
        - Website > Blog
      summary: show all blog list
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_limit
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/blogs/{blog}:
    get:
      tags:
        - Website > Blog
      summary: show single blog details
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: blog
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/faq:
    get:
      tags:
        - Website > FAQ
      summary: show faq
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-team:
    get:
      tags:
        - Website > Our Team
      summary: get our team list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-settings:
    get:
      tags:
        - Website > Site Settings
      summary: get all site settings data
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/testimonial:
    get:
      tags:
        - Website > Testimonial
      summary: show all testimonial
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
